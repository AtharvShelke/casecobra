generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulFilled
  shipped
  awaiting_shipment
}

enum PhoneModel {
  iPhone11
  iPhone12
  iPhone13
  iPhone14
  iPhone15
  iPhone16
}

enum CaseMaterial {
  silicone
  polycarbonate
}

enum CaseFinish {
  smooth
  textured
}

enum CaseColor {
  black
  blue
  rose
}

model Configuration {
  id              String        @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  croppedImageUrl String?
  model           PhoneModel?
  material        CaseMaterial?
  finish          CaseFinish?
  color           CaseColor?
  Order           Order[]
  DummyOrder      DummyOrder[]
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique // âœ… Add this to make email searchable
  password   String?
  role       UserRole     @default(USER)
  name       String?      @default("User")
  order      Order[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  DummyOrder DummyOrder[]
}

model Order {
  id                String           @id @default(cuid())
  configurationId   String
  configuration     Configuration    @relation(fields: [configurationId], references: [id])
  user              User             @relation(fields: [userId], references: [id])
  userId            String
  amount            Float
  isPaid            Boolean          @default(false)
  status            OrderStatus      @default(awaiting_shipment)
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model DummyOrder {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}
